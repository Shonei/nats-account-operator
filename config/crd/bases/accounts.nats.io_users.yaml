---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: users.accounts.nats.io
spec:
  group: accounts.nats.io
  names:
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.keyPair.publicKey
      name: Public Key
      type: string
    - jsonPath: .status.accountRef.name
      name: Account
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: User is the Schema for the users API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UserSpec defines the desired state of User
            properties:
              bearerToken:
                description: BearerToken is a JWT claim for the User.
                type: boolean
              credentialsSecretName:
                description: CredentialsSecretName is the name of the Secret that
                  will be created to store the credentials for this User.
                type: string
              jwtSecretName:
                description: JWTSecretName is the name of the Secret that will be
                  created to store the JWT for this User.
                type: string
              limits:
                description: Limits is a JWT claim for the User.
                properties:
                  max:
                    type: integer
                  payload:
                    type: integer
                  src:
                    description: Src is a comma-separated list of CIDR blocks
                    type: string
                  times:
                    description: Times is a list of start/end times in the format
                      "15:04:05".
                    items:
                      properties:
                        end:
                          type: string
                        start:
                          type: string
                      required:
                      - end
                      - start
                      type: object
                    type: array
                required:
                - max
                - payload
                type: object
              permissions:
                description: Permissions is a JWT claim for the User.
                properties:
                  pub:
                    properties:
                      allow:
                        items:
                          type: string
                        type: array
                      deny:
                        items:
                          type: string
                        type: array
                    required:
                    - allow
                    - deny
                    type: object
                  resp:
                    properties:
                      max:
                        type: integer
                      ttl:
                        type: integer
                    required:
                    - max
                    - ttl
                    type: object
                  sub:
                    properties:
                      allow:
                        items:
                          type: string
                        type: array
                      deny:
                        items:
                          type: string
                        type: array
                    required:
                    - allow
                    - deny
                    type: object
                required:
                - pub
                - sub
                type: object
              seedSecretName:
                description: SeedSecretName is the name of the Secret that will be
                  created to store the seed for this User.
                type: string
              signingKey:
                description: SigningKey is the reference to the SigningKey that will
                  be used to sign JWTs for this User. The controller will check the
                  owner of the SigningKey is an Account, and that this User can be
                  managed by that Account following its namespace and label selector
                  restrictions.
                properties:
                  ref:
                    properties:
                      apiVersion:
                        type: string
                      kind:
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      uid:
                        description: UID is a type that holds unique ID values, including
                          UUIDs.  Because we don't ONLY use UUIDs, this is an alias
                          to string.  Being a type captures intent and helps make
                          sure that UIDs and names do not get conflated.
                        type: string
                    required:
                    - apiVersion
                    - kind
                    - name
                    type: object
                required:
                - ref
                type: object
            required:
            - bearerToken
            - credentialsSecretName
            - jwtSecretName
            - limits
            - permissions
            - seedSecretName
            - signingKey
            type: object
          status:
            description: UserStatus defines the observed state of User
            properties:
              accountRef:
                description: InferredObjectReference is an object reference without
                  the APIVersion and Kind fields. The APIVersion and Kind are inferred
                  based on where the reference is used.
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                required:
                - name
                type: object
              conditions:
                description: Conditions is the schema for the conditions portion of
                  the payload
                items:
                  description: 'Condition defines a readiness condition for a Knative
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another. We use VolatileTime
                        in place of metav1.Time to exclude this from creating equality.Semantic
                        differences (all other things held constant).
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type
                        of condition. When this is not specified, it defaults to Error.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              keyPair:
                properties:
                  publicKey:
                    type: string
                  seedSecretName:
                    type: string
                required:
                - publicKey
                - seedSecretName
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
